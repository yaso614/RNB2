{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/ansey/workspace/devKingdom/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styled from \"styled-components\";\n\nvar Counter = /*#__PURE__*/function (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"increment\", function () {\n      return _this.setState({\n        count: _this.state.count + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decrement\", function () {\n      return _this.setState({\n        count: _this.state.count - 1\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: styles.counter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, __jsx(\"p\", {\n        className: styles.paragraph,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, this.state.count), __jsx(\"button\", {\n        className: styles.button,\n        onClick: this.increment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, \"+\"), __jsx(\"button\", {\n        className: styles.button,\n        onClick: this.decrement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"-\"));\n    }\n  }]);\n\n  return Counter;\n}(React.Component);\n\nexport { Counter as default };","map":{"version":3,"sources":["/mnt/c/Users/ansey/workspace/devKingdom/front/pages/index.js"],"names":["React","styled","Counter","count","setState","state","styles","counter","paragraph","button","increment","decrement","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAEqBC,O;;;;;;;;;;;;;;;;4DACX;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;gEAEI;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE,MAAKE,KAAL,CAAWF,KAAX,GAAmB;AAA5B,OAAd,CAAN;AAAA,K;;gEACA;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE,MAAKE,KAAL,CAAWF,KAAX,GAAmB;AAA5B,OAAd,CAAN;AAAA,K;;;;;;;6BAEH;AACP,aACE;AAAK,QAAA,SAAS,EAAEG,MAAM,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAED,MAAM,CAACE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKH,KAAL,CAAWF,KAA5C,CADF,EAEE;AAAQ,QAAA,SAAS,EAAEG,MAAM,CAACG,MAA1B;AAAkC,QAAA,OAAO,EAAE,KAAKC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAKE;AAAQ,QAAA,SAAS,EAAEJ,MAAM,CAACG,MAA1B;AAAkC,QAAA,OAAO,EAAE,KAAKE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AAWD;;;;EAlBkCX,KAAK,CAACY,S;;SAAtBV,O","sourcesContent":["import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nexport default class Counter extends React.Component {\r\n  state = { count: 0 }\r\n\r\n  increment = () => this.setState({ count: this.state.count + 1 })\r\n  decrement = () => this.setState({ count: this.state.count - 1 })\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.counter}>\r\n        <p className={styles.paragraph}>{this.state.count}</p>\r\n        <button className={styles.button} onClick={this.increment}>\r\n          +\r\n        </button>\r\n        <button className={styles.button} onClick={this.decrement}>\r\n          -\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}